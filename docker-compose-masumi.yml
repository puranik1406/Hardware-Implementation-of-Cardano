version: "3.8"

services:
  registry-service:
    image: ghcr.io/masumi-network/masumi-registry-service:0.22.0
    container_name: masumi-registry-service
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres-registry:5432/postgres?schema=public
      - ADMIN_KEY=${ADMIN_KEY}
      - BLOCKFROST_API_KEY_PREPROD=${BLOCKFROST_PROJECT_ID}
      - SEED_ONLY_IF_EMPTY=TRUE
    depends_on:
      postgres-registry:
        condition: service_healthy
    command: >
      sh -c "apt-get update && apt-get install -y curl && npm run prisma:migrate && npm run prisma:seed && npm start"
    networks:
      - masumi-network-registry
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  payment-service:
    image: ghcr.io/masumi-network/masumi-payment-service:0.22.0
    container_name: masumi-payment-service
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres-payment:5432/postgres?schema=public
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ADMIN_KEY=${ADMIN_KEY}
      - BLOCKFROST_API_KEY_PREPROD=${BLOCKFROST_PROJECT_ID}
      - SEED_ONLY_IF_EMPTY=TRUE
    depends_on:
      postgres-payment:
        condition: service_healthy
    command: >
      sh -c "apt-get update && apt-get install -y curl && npm run prisma:migrate && npm run prisma:seed && npm start"
    networks:
      - masumi-network-payment
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-registry:
    image: postgres:15
    container_name: postgres-registry
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-registry-data:/var/lib/postgresql/data
    networks:
      - masumi-network-registry
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-payment:
    image: postgres:15
    container_name: postgres-payment
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-payment-data:/var/lib/postgresql/data
    networks:
      - masumi-network-payment
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  masumi-network-registry:
    driver: bridge
  masumi-network-payment:
    driver: bridge

volumes:
  postgres-registry-data:
  postgres-payment-data: